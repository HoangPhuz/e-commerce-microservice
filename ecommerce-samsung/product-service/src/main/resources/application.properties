# Tên service và c?ng
spring.application.name=product-service
server.port=8088

# Eureka client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# MongoDB
spring.data.mongodb.uri=mongodb://localhost:27017/product_db

# JWT
spring.security.oauth2.resourceserver.jwt.jws-algorithms=HS256

# C?u hình upload file
file.upload-dir=uploads/images
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Kafka
spring.kafka.bootstrap-servers=localhost:9093

# PRODUCER CONFIG
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# CONSUMER CONFIG
spring.kafka.consumer.group-id=product-group
spring.kafka.consumer.auto-offset-reset=earliest

# Dùng ErrorHandlingDeserializer ?? tránh l?i crash khi deserialize
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate th?c t? cho JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Cho phép nh?n nhi?u lo?i class khác nhau (ho?c "*" n?u mu?n nh?n t?t c?)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Optional: n?u b?n th??ng xuyên nh?n m?t object c? th? t? topic chính
spring.kafka.consumer.properties.spring.json.value.default.type=com.nhom_09.productservice.dto.OrderCreatedEvent
